-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.categories (
  name text NOT NULL,
  description text,
  parent_id integer,
  code text NOT NULL UNIQUE,
  image_url text,
  id integer NOT NULL DEFAULT nextval('categories_id_seq'::regclass),
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id),
  CONSTRAINT categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.categories(id)
);
CREATE TABLE public.debug_logs (
  context text,
  data jsonb,
  id bigint NOT NULL DEFAULT nextval('debug_logs_id_seq'::regclass),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT debug_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.inventory (
  product_id uuid NOT NULL,
  warehouse_id integer NOT NULL,
  average_cost numeric,
  last_movement_date timestamp with time zone,
  last_count_date timestamp with time zone,
  bin_location text,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  quantity_on_hand integer NOT NULL DEFAULT 0 CHECK (quantity_on_hand >= 0),
  quantity_reserved integer NOT NULL DEFAULT 0 CHECK (quantity_reserved >= 0),
  quantity_available integer DEFAULT (quantity_on_hand - quantity_reserved),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT inventory_pkey PRIMARY KEY (id),
  CONSTRAINT inventory_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT inventory_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.products (
  sku text NOT NULL UNIQUE,
  name text NOT NULL,
  description text,
  category_id integer,
  supplier_id integer,
  brand text,
  model text,
  barcode text,
  weight numeric,
  dimensions jsonb,
  cost_price numeric NOT NULL CHECK (cost_price >= 0::numeric),
  selling_price numeric NOT NULL CHECK (selling_price >= 0::numeric),
  max_stock_level integer,
  created_by uuid,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  currency text DEFAULT 'USD'::text,
  reorder_point integer NOT NULL DEFAULT 10 CHECK (reorder_point >= 0),
  is_active boolean DEFAULT true,
  is_serialized boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  image_urls ARRAY,
  tags ARRAY,
  CONSTRAINT products_pkey PRIMARY KEY (id),
  CONSTRAINT products_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT products_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id),
  CONSTRAINT products_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.purchase_order_items (
  purchase_order_id uuid NOT NULL,
  product_id uuid NOT NULL,
  quantity integer NOT NULL CHECK (quantity > 0),
  unit_cost numeric NOT NULL CHECK (unit_cost >= 0::numeric),
  notes text,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  line_total numeric DEFAULT ((quantity)::numeric * unit_cost),
  received_quantity integer NOT NULL DEFAULT 0 CHECK (received_quantity >= 0),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT purchase_order_items_pkey PRIMARY KEY (id),
  CONSTRAINT purchase_order_items_purchase_order_id_fkey FOREIGN KEY (purchase_order_id) REFERENCES public.purchase_orders(id),
  CONSTRAINT purchase_order_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.purchase_order_status_history (
  purchase_order_id uuid NOT NULL,
  from_status USER-DEFINED,
  to_status USER-DEFINED NOT NULL,
  changed_by uuid NOT NULL,
  notes text,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT purchase_order_status_history_pkey PRIMARY KEY (id),
  CONSTRAINT purchase_order_status_history_changed_by_fkey FOREIGN KEY (changed_by) REFERENCES public.user_profiles(id),
  CONSTRAINT purchase_order_status_history_purchase_order_id_fkey FOREIGN KEY (purchase_order_id) REFERENCES public.purchase_orders(id)
);
CREATE TABLE public.purchase_orders (
  sent_at timestamp with time zone,
  sent_by uuid,
  confirmed_at timestamp with time zone,
  confirmed_by uuid,
  completed_at timestamp with time zone,
  completed_by uuid,
  cancelled_at timestamp with time zone,
  cancelled_by uuid,
  cancellation_reason text,
  supplier_confirmation_notes text,
  reference text,
  priority text DEFAULT 'normal'::text CHECK (priority = ANY (ARRAY['low'::text, 'normal'::text, 'high'::text, 'urgent'::text])),
  delivery_method text,
  contact_person text,
  contact_email text CHECK (contact_email IS NULL OR contact_email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  contact_phone text,
  order_number text NOT NULL,
  status USER-DEFINED DEFAULT 'draft'::purchase_order_status,
  po_number text NOT NULL UNIQUE,
  supplier_id integer NOT NULL,
  warehouse_id integer NOT NULL,
  expected_delivery_date date,
  actual_delivery_date date,
  notes text,
  terms_conditions text,
  created_by uuid NOT NULL,
  approved_by uuid,
  approved_at timestamp with time zone,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_date date NOT NULL DEFAULT CURRENT_DATE,
  subtotal numeric NOT NULL DEFAULT 0 CHECK (subtotal >= 0::numeric),
  tax_rate numeric DEFAULT 0.0000,
  tax_amount numeric NOT NULL DEFAULT 0 CHECK (tax_amount >= 0::numeric),
  shipping_cost numeric NOT NULL DEFAULT 0 CHECK (shipping_cost >= 0::numeric),
  discount_amount numeric NOT NULL DEFAULT 0 CHECK (discount_amount >= 0::numeric),
  total_amount numeric DEFAULT (((subtotal + tax_amount) + shipping_cost) - discount_amount),
  currency text DEFAULT 'USD'::text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT purchase_orders_pkey PRIMARY KEY (id),
  CONSTRAINT purchase_orders_confirmed_by_fkey FOREIGN KEY (confirmed_by) REFERENCES public.user_profiles(id),
  CONSTRAINT purchase_orders_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT purchase_orders_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT purchase_orders_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id),
  CONSTRAINT purchase_orders_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.user_profiles(id),
  CONSTRAINT purchase_orders_sent_by_fkey FOREIGN KEY (sent_by) REFERENCES public.user_profiles(id),
  CONSTRAINT purchase_orders_completed_by_fkey FOREIGN KEY (completed_by) REFERENCES public.user_profiles(id),
  CONSTRAINT purchase_orders_cancelled_by_fkey FOREIGN KEY (cancelled_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.stock_alerts (
  product_id uuid NOT NULL,
  warehouse_id integer NOT NULL,
  alert_type USER-DEFINED NOT NULL,
  current_quantity integer NOT NULL,
  threshold_quantity integer,
  message text NOT NULL,
  acknowledged_by uuid,
  acknowledged_at timestamp with time zone,
  resolved_at timestamp with time zone,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  is_active boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT stock_alerts_pkey PRIMARY KEY (id),
  CONSTRAINT stock_alerts_acknowledged_by_fkey FOREIGN KEY (acknowledged_by) REFERENCES public.user_profiles(id),
  CONSTRAINT stock_alerts_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT stock_alerts_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.stock_movements (
  product_id uuid NOT NULL,
  warehouse_id integer NOT NULL,
  movement_type USER-DEFINED NOT NULL,
  quantity integer NOT NULL,
  reference_type text,
  reference_id uuid,
  from_warehouse_id integer,
  to_warehouse_id integer,
  unit_cost numeric,
  reason text,
  notes text,
  batch_number text,
  serial_numbers ARRAY,
  created_by uuid NOT NULL,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  total_cost numeric DEFAULT ((abs(quantity))::numeric * COALESCE(unit_cost, (0)::numeric)),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT stock_movements_pkey PRIMARY KEY (id),
  CONSTRAINT stock_movements_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT stock_movements_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id),
  CONSTRAINT stock_movements_to_warehouse_id_fkey FOREIGN KEY (to_warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT stock_movements_from_warehouse_id_fkey FOREIGN KEY (from_warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT stock_movements_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.suppliers (
  name text NOT NULL,
  code text NOT NULL UNIQUE,
  contact_person text,
  email text CHECK (email IS NULL OR email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  phone text,
  address text,
  city text,
  state text,
  postal_code text,
  tax_id text,
  credit_limit numeric,
  rating integer CHECK (rating >= 1 AND rating <= 5),
  notes text,
  created_by uuid,
  id integer NOT NULL DEFAULT nextval('suppliers_id_seq'::regclass),
  country text DEFAULT 'USA'::text,
  payment_terms integer DEFAULT 30,
  is_active boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT suppliers_pkey PRIMARY KEY (id),
  CONSTRAINT suppliers_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  first_name text NOT NULL,
  last_name text NOT NULL,
  phone text CHECK (phone IS NULL OR phone ~ '^\+?[1-9]\d{1,14}$'::text),
  avatar_url text,
  warehouse_id integer,
  last_login timestamp with time zone,
  role USER-DEFINED NOT NULL DEFAULT 'user'::user_role,
  status USER-DEFINED NOT NULL DEFAULT 'active'::user_status,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT user_profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL,
  full_name text,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.warehouses (
  name text NOT NULL,
  code text NOT NULL UNIQUE,
  address text NOT NULL,
  city text NOT NULL,
  state text NOT NULL,
  postal_code text NOT NULL,
  phone text,
  email text CHECK (email IS NULL OR email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  manager_id uuid,
  id integer NOT NULL DEFAULT nextval('warehouses_id_seq'::regclass),
  country text NOT NULL DEFAULT 'USA'::text,
  is_active boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT warehouses_pkey PRIMARY KEY (id),
  CONSTRAINT warehouses_manager_id_fkey FOREIGN KEY (manager_id) REFERENCES public.user_profiles(id)
);